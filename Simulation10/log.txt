Starting parallel pool (parpool) using the 'local' profile ... connected to 2 workers.

<a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'lsq_init_pt_min','CSHelpWindow');">Initial point is a local minimum</a>.

Optimization completed because the <a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'lsq_grad_size','CSHelpWindow');">size of the gradient</a> at the initial point
is less than 1e-4 times the default value of the <a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'function_tolerance_lsq','CSHelpWindow');">function tolerance</a>.

<<a href = "matlab: createExitMsg('levenbergMarquardt',1.000000e+02,true,true,'lsqnonlin',4.044453e-33,'default',1.000000e-10,0.000000e+00,'',0.000000e+00,0.000000e+00,'',0.000000e+00);">stopping criteria details</a>>


#### 	 Sim.	 1 von	 10 	 #### 
	 Apply Noise to Ideal State
	 Project Behaviour to Local Polytope
	 Start QST Linear Inversion for Noisy Behaviour
	 Elapsed time: 0.019066 
	 Start QST Linear Inversion for Projected Behaviour
	 Elapsed time: 0.015769 
	 Start QST Maximum Likelihood for Noisy Behaviour

<a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'local_min_possible_lsq','CSHelpWindow');">Local minimum possible</a>.

lsqnonlin stopped because the final change in the sum of squares relative to 
its initial value is less than the default value of the <a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'function_tolerance_lsq','CSHelpWindow');">function tolerance</a>.

<<a href = "matlab: createExitMsg('levenbergMarquardt',3.000000e+00,true,true,'lsqnonlin',7.939764e-07,'default',1.000000e-06,0.000000e+00,'',0.000000e+00,0.000000e+00,'',0.000000e+00);">stopping criteria details</a>>

	 Elapsed time: 143.759089 
	 Start QST Maximum Likelihood for Projected Behaviour

<a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'local_min_possible_lsq','CSHelpWindow');">Local minimum possible</a>.

lsqnonlin stopped because the final change in the sum of squares relative to 
its initial value is less than the default value of the <a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'function_tolerance_lsq','CSHelpWindow');">function tolerance</a>.

<<a href = "matlab: createExitMsg('levenbergMarquardt',3.000000e+00,true,true,'lsqnonlin',3.147322e-07,'default',1.000000e-06,0.000000e+00,'',0.000000e+00,0.000000e+00,'',0.000000e+00);">stopping criteria details</a>>

	 Elapsed time: 229.388483 
#### 	 #### 	 ####

#### 	 Sim.	 2 von	 10 	 #### 
	 Apply Noise to Ideal State
	 Project Behaviour to Local Polytope
	 Start QST Linear Inversion for Noisy Behaviour
	 Elapsed time: 0.021963 
	 Start QST Linear Inversion for Projected Behaviour
	 Elapsed time: 0.018669 
	 Start QST Maximum Likelihood for Noisy Behaviour
{Operation terminated by user during <a href="matlab:matlab.internal.language.introspective.errorDocCallback('distcomp.remoteparfor/getCompleteIntervals', 'C:\Program Files\MATLAB\R2016b\toolbox\distcomp\distcomp\+distcomp\remoteparfor.m', 127)" style="font-weight:bold">distcomp.remoteparfor/getCompleteIntervals</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2016b\toolbox\distcomp\distcomp\+distcomp\remoteparfor.m',127,0)">line 127</a>)


In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('parallel_function>distributed_execution', 'C:\Program Files\MATLAB\R2016b\toolbox\matlab\lang\parallel_function.p', 820)" style="font-weight:bold">parallel_function>distributed_execution</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2016b\toolbox\matlab\lang\parallel_function.p',820,0)">line 820</a>)
        [tags, out] = P.getCompleteIntervals(chunkSize);

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('parallel_function', 'C:\Program Files\MATLAB\R2016b\toolbox\matlab\lang\parallel_function.p', 587)" style="font-weight:bold">parallel_function</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2016b\toolbox\matlab\lang\parallel_function.p',587,0)">line 587</a>)
        R = distributed_execution(...

In parfinitedifferences

In computeFinDiffGradAndJac

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('levenbergMarquardt', 'C:\Program Files\MATLAB\R2016b\toolbox\shared\optimlib\levenbergMarquardt.m', 252)" style="font-weight:bold">levenbergMarquardt</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2016b\toolbox\shared\optimlib\levenbergMarquardt.m',252,0)">line 252</a>)
            [JAC,~,~,numEvals,evalOK] = computeFinDiffGradAndJac(XOUT,funfcn,confcn,costFun, ...

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('lsqncommon', 'C:\Program Files\MATLAB\R2016b\toolbox\shared\optimlib\lsqncommon.m', 174)" style="font-weight:bold">lsqncommon</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2016b\toolbox\shared\optimlib\lsqncommon.m',174,0)">line 174</a>)
        levenbergMarquardt(funfcn,xC,flags.verbosity,options,defaultopt,initVals.F,initVals.J, ...

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('lsqnonlin', 'C:\Program Files\MATLAB\R2016b\toolbox\optim\optim\lsqnonlin.m', 240)" style="font-weight:bold">lsqnonlin</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2016b\toolbox\optim\optim\lsqnonlin.m',240,0)">line 240</a>)
   lsqncommon(funfcn,xCurrent,lb,ub,options,defaultopt,caller,...

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('qst_maximumlikelihood', 'C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\qst_maximumlikelihood.m', 141)" style="font-weight:bold">qst_maximumlikelihood</a> (<a href="matlab: opentoline('C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\qst_maximumlikelihood.m',141,0)">line 141</a>)
    x = lsqnonlin(L,start,[],[],opt);

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('simulation10', 'C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\simulation10.m', 114)" style="font-weight:bold">simulation10</a> (<a href="matlab: opentoline('C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\simulation10.m',114,0)">line 114</a>)
    rho_Noise{ii,3} = qst_maximumlikelihood(rho_Noise{ii,2},Chi,P_QST_Selection(P_Noise{ii,1}));
} 
simulation10

<a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'lsq_init_pt_min','CSHelpWindow');">Initial point is a local minimum</a>.

Optimization completed because the <a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'lsq_grad_size','CSHelpWindow');">size of the gradient</a> at the initial point
is less than 1e-4 times the default value of the <a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'function_tolerance_lsq','CSHelpWindow');">function tolerance</a>.

<<a href = "matlab: createExitMsg('levenbergMarquardt',1.000000e+02,true,true,'lsqnonlin',4.044453e-33,'default',1.000000e-10,0.000000e+00,'',0.000000e+00,0.000000e+00,'',0.000000e+00);">stopping criteria details</a>>

{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('simulation10', 'C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\simulation10.m', 84)" style="font-weight:bold">simulation10</a> (<a href="matlab: opentoline('C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\simulation10.m',84,0)">line 84</a>)
Error: The variable P_Noise in a parfor cannot be classified.
See <a href="matlab: helpview([docroot '/distcomp/distcomp_ug.map'],'MIR_ERROR_PARFOR_BAD_TEMPORARY_VARIABLE')">Parallel for Loops in MATLAB, "Overview"</a>.
} 
simulation10

<a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'lsq_init_pt_min','CSHelpWindow');">Initial point is a local minimum</a>.

Optimization completed because the <a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'lsq_grad_size','CSHelpWindow');">size of the gradient</a> at the initial point
is less than 1e-4 times the default value of the <a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'function_tolerance_lsq','CSHelpWindow');">function tolerance</a>.

<<a href = "matlab: createExitMsg('levenbergMarquardt',1.000000e+02,true,true,'lsqnonlin',4.044453e-33,'default',1.000000e-10,0.000000e+00,'',0.000000e+00,0.000000e+00,'',0.000000e+00);">stopping criteria details</a>>

{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('simulation10', 'C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\simulation10.m', 84)" style="font-weight:bold">simulation10</a> (<a href="matlab: opentoline('C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\simulation10.m',84,0)">line 84</a>)
Error: The variable P_Noise in a parfor cannot be classified.
See <a href="matlab: helpview([docroot '/distcomp/distcomp_ug.map'],'MIR_ERROR_PARFOR_BAD_TEMPORARY_VARIABLE')">Parallel for Loops in MATLAB, "Overview"</a>.
} 
IdleTimeout has been reached.
Parallel pool using the 'local' profile is shutting down.
M_Noise

M_Noise =

  10×2 <a href="matlab:helpPopup cell" style="font-weight:bold">cell</a> array

    {16×1 cell}    {16×1 cell}
    {16×1 cell}    {16×1 cell}
    {16×1 cell}    {16×1 cell}
    {16×1 cell}    {16×1 cell}
    {16×1 cell}    {16×1 cell}
    {16×1 cell}    {16×1 cell}
    {16×1 cell}    {16×1 cell}
    {16×1 cell}    {16×1 cell}
    {16×1 cell}    {16×1 cell}
    {16×1 cell}    {16×1 cell}

M_Noise(1,1)

ans =

  <a href="matlab:helpPopup cell" style="font-weight:bold">cell</a>

    {16×1 cell}

P=cells(10,2)
{Undefined function or variable 'cells'.
} 
P=cell(10,2)

P =

  10×2 <a href="matlab:helpPopup cell" style="font-weight:bold">cell</a> array

    []    []
    []    []
    []    []
    []    []
    []    []
    []    []
    []    []
    []    []
    []    []
    []    []

P(1,1)

ans =

  <a href="matlab:helpPopup cell" style="font-weight:bold">cell</a>

    {[]}

P{1,1}

ans =

     []

P{1,:}

ans =

     []


ans =

     []

P(1,:)

ans =

  1×2 <a href="matlab:helpPopup cell" style="font-weight:bold">cell</a> array

    []    []

simulation10
Starting parallel pool (parpool) using the 'local' profile ... connected to 2 workers.

<a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'lsq_init_pt_min','CSHelpWindow');">Initial point is a local minimum</a>.

Optimization completed because the <a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'lsq_grad_size','CSHelpWindow');">size of the gradient</a> at the initial point
is less than 1e-4 times the default value of the <a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'function_tolerance_lsq','CSHelpWindow');">function tolerance</a>.

<<a href = "matlab: createExitMsg('levenbergMarquardt',1.000000e+02,true,true,'lsqnonlin',4.044453e-33,'default',1.000000e-10,0.000000e+00,'',0.000000e+00,0.000000e+00,'',0.000000e+00);">stopping criteria details</a>>


#### 	 Sim.	 7 von	 10 	 #### 
	 Apply Noise to Ideal State
	 Project Behaviour to Local Polytope

#### 	 Sim.	 4 von	 10 	 #### 
	 Apply Noise to Ideal State
	 Project Behaviour to Local Polytope
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('nonSignaling', 'C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\nonSignaling.m', 54)" style="font-weight:bold">nonSignaling</a> (<a href="matlab: opentoline('C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\nonSignaling.m',54,0)">line 54</a>)
Index exceeds matrix dimensions.

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('simulation10', 'C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\simulation10.m', 87)" style="font-weight:bold">simulation10</a> (<a href="matlab: opentoline('C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\simulation10.m',87,0)">line 87</a>)
parfor ii=1:nMeasurement
} 
opentoline('C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\simulation10.m',87,0)
P

P(:,:,1,1) =

    0.5000         0
         0    0.5000


P(:,:,2,1) =

    0.2500    0.2500
    0.2500    0.2500


P(:,:,3,1) =

    0.2500    0.2500
    0.2500    0.2500


P(:,:,1,2) =

    0.2500    0.2500
    0.2500    0.2500


P(:,:,2,2) =

    0.5000         0
         0    0.5000


P(:,:,3,2) =

    0.2500    0.2500
    0.2500    0.2500


P(:,:,1,3) =

    0.2500    0.2500
    0.2500    0.2500


P(:,:,2,3) =

    0.2500    0.2500
    0.2500    0.2500


P(:,:,3,3) =

    0.0000    0.5000
    0.5000         0

P(ii,1)
{Index exceeds matrix dimensions.
} 
P{ii,1}
{Cell contents reference from a non-cell array object.
} 
P

P(:,:,1,1) =

    0.5000         0
         0    0.5000


P(:,:,2,1) =

    0.2500    0.2500
    0.2500    0.2500


P(:,:,3,1) =

    0.2500    0.2500
    0.2500    0.2500


P(:,:,1,2) =

    0.2500    0.2500
    0.2500    0.2500


P(:,:,2,2) =

    0.5000         0
         0    0.5000


P(:,:,3,2) =

    0.2500    0.2500
    0.2500    0.2500


P(:,:,1,3) =

    0.2500    0.2500
    0.2500    0.2500


P(:,:,2,3) =

    0.2500    0.2500
    0.2500    0.2500


P(:,:,3,3) =

    0.0000    0.5000
    0.5000         0

simulation10

<a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'lsq_init_pt_min','CSHelpWindow');">Initial point is a local minimum</a>.

Optimization completed because the <a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'lsq_grad_size','CSHelpWindow');">size of the gradient</a> at the initial point
is less than 1e-4 times the default value of the <a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'function_tolerance_lsq','CSHelpWindow');">function tolerance</a>.

<<a href = "matlab: createExitMsg('levenbergMarquardt',1.000000e+02,true,true,'lsqnonlin',4.044453e-33,'default',1.000000e-10,0.000000e+00,'',0.000000e+00,0.000000e+00,'',0.000000e+00);">stopping criteria details</a>>

{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('simulation10', 'C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\simulation10.m', 88)" style="font-weight:bold">simulation10</a> (<a href="matlab: opentoline('C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\simulation10.m',88,0)">line 88</a>)
Error: The variable P in a parfor cannot be classified.
See <a href="matlab: helpview([docroot '/distcomp/distcomp_ug.map'],'MIR_ERROR_PARFOR_BAD_TEMPORARY_VARIABLE')">Parallel for Loops in MATLAB, "Overview"</a>.
} 
simulation10

<a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'lsq_init_pt_min','CSHelpWindow');">Initial point is a local minimum</a>.

Optimization completed because the <a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'lsq_grad_size','CSHelpWindow');">size of the gradient</a> at the initial point
is less than 1e-4 times the default value of the <a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'function_tolerance_lsq','CSHelpWindow');">function tolerance</a>.

<<a href = "matlab: createExitMsg('levenbergMarquardt',1.000000e+02,true,true,'lsqnonlin',4.044453e-33,'default',1.000000e-10,0.000000e+00,'',0.000000e+00,0.000000e+00,'',0.000000e+00);">stopping criteria details</a>>

{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('simulation10', 'C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\simulation10.m', 88)" style="font-weight:bold">simulation10</a> (<a href="matlab: opentoline('C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\simulation10.m',88,0)">line 88</a>)
Error: The variable P in a parfor cannot be classified.
See <a href="matlab: helpview([docroot '/distcomp/distcomp_ug.map'],'MIR_ERROR_PARFOR_BAD_TEMPORARY_VARIABLE')">Parallel for Loops in MATLAB, "Overview"</a>.
} 
simulation10

<a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'lsq_init_pt_min','CSHelpWindow');">Initial point is a local minimum</a>.

Optimization completed because the <a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'lsq_grad_size','CSHelpWindow');">size of the gradient</a> at the initial point
is less than 1e-4 times the default value of the <a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'function_tolerance_lsq','CSHelpWindow');">function tolerance</a>.

<<a href = "matlab: createExitMsg('levenbergMarquardt',1.000000e+02,true,true,'lsqnonlin',4.044453e-33,'default',1.000000e-10,0.000000e+00,'',0.000000e+00,0.000000e+00,'',0.000000e+00);">stopping criteria details</a>>

{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('simulation10', 'C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\simulation10.m', 88)" style="font-weight:bold">simulation10</a> (<a href="matlab: opentoline('C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\simulation10.m',88,0)">line 88</a>)
Error: The variable P in a parfor cannot be classified.
See <a href="matlab: helpview([docroot '/distcomp/distcomp_ug.map'],'MIR_ERROR_PARFOR_BAD_TEMPORARY_VARIABLE')">Parallel for Loops in MATLAB, "Overview"</a>.
} 
simulation10

<a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'lsq_init_pt_min','CSHelpWindow');">Initial point is a local minimum</a>.

Optimization completed because the <a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'lsq_grad_size','CSHelpWindow');">size of the gradient</a> at the initial point
is less than 1e-4 times the default value of the <a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'function_tolerance_lsq','CSHelpWindow');">function tolerance</a>.

<<a href = "matlab: createExitMsg('levenbergMarquardt',1.000000e+02,true,true,'lsqnonlin',4.044453e-33,'default',1.000000e-10,0.000000e+00,'',0.000000e+00,0.000000e+00,'',0.000000e+00);">stopping criteria details</a>>


#### 	 Sim.	 7 von	 10 	 #### 
	 Apply Noise to Ideal State
	 Project Behaviour to Local Polytope
	 Start QST Linear Inversion for Noisy Behaviour
	 Elapsed time: 0.246281 
	 Start QST Linear Inversion for Projected Behaviour
	 Elapsed time: 0.019766 
	 Start QST Maximum Likelihood for Noisy Behaviour
Operation terminated by user during qst_maximumlikelihood>@(t)[t(1),0,0,0;t(5)+1i*t(6),t(2),0,0;t(11)+1i*t(12),t(7)+1i*t(8),t(3),0;t(15)+1i*t(16),t(13)+1i*t(14),t(9)+1i*t(10),t(4)] (line 52)


In qst_maximumlikelihood>@(t)TT(t)'*TT(t)/trace(TT(t)'*TT(t)) (line 53)
    rho = @(t) TT(t)'*TT(t) / trace(TT(t)'*TT(t));

In qst_maximumlikelihood>@(t)(measurementBasis{1}'*rho(t)*measurementBasis{1}-countSignal(1))^2/2*(measurementBasis{1}'*rho(t)*measurementBasis{1})+(measurementBasis{2}'*rho(t)*measurementBasis{2}-countSignal(2))^2/2*(measurementBasis{2}'*rho(t)*measurementBasis{2})+(measurementBasis{3}'*rho(t)*measurementBasis{3}-countSignal(3))^2/2*(measurementBasis{3}'*rho(t)*measurementBasis{3})+(measurementBasis{4}'*rho(t)*measurementBasis{4}-countSignal(4))^2/2*(measurementBasis{4}'*rho(t)*measurementBasis{4})+(measurementBasis{5}'*rho(t)*measurementBasis{5}-countSignal(5))^2/2*(measurementBasis{5}'*rho(t)*measurementBasis{5})+(measurementBasis{6}'*rho(t)*measurementBasis{6}-countSignal(6))^2/2*(measurementBasis{6}'*rho(t)*measurementBasis{6})+(measurementBasis{7}'*rho(t)*measurementBasis{7}-countSignal(7))^2/2*(measurementBasis{7}'*rho(t)*measurementBasis{7})+(measurementBasis{8}'*rho(t)*measurementBasis{8}-countSignal(8))^2/2*(measurementBasis{8}'*rho(t)*measurementBasis{8})+(measurementBasis{9}'*rho(t)*measurementBasis{9}-countSignal(9))^2/2*(measurementBasis{9}'*rho(t)*measurementBasis{9})+(measurementBasis{10}'*rho(t)*measurementBasis{10}-countSignal(10))^2/2*(measurementBasis{10}'*rho(t)*measurementBasis{10})+(measurementBasis{11}'*rho(t)*measurementBasis{11}-countSignal(11))^2/2*(measurementBasis{11}'*rho(t)*measurementBasis{11})+(measurementBasis{12}'*rho(t)*measurementBasis{12}-countSignal(12))^2/2*(measurementBasis{12}'*rho(t)*measurementBasis{12})+(measurementBasis{13}'*rho(t)*measurementBasis{13}-countSignal(13))^2/2*(measurementBasis{13}'*rho(t)*measurementBasis{13})+(measurementBasis{14}'*rho(t)*measurementBasis{14}-countSignal(14))^2/2*(measurementBasis{14}'*rho(t)*measurementBasis{14})+(measurementBasis{15}'*rho(t)*measurementBasis{15}-countSignal(15))^2/2*(measurementBasis{15}'*rho(t)*measurementBasis{15})+(measurementBasis{16}'*rho(t)*measurementBasis{16}-countSignal(16))^2/2*(measurementBasis{16}'*rho(t)*measurementBasis{16}) (line 91)
         + (measurementBasis{3}'*rho(t)*measurementBasis{3}-countSignal(3))^2 / 2*(measurementBasis{3}'*rho(t)*measurementBasis{3})...

In finDiffEvalAndChkErr

In parfinitedifferences

In parallel_function (line 478)
            consume(base, limit, F(base, limit, supply(base, limit)));

In parfinitedifferences

In computeFinDiffGradAndJac

In levenbergMarquardt (line 252)
            [JAC,~,~,numEvals,evalOK] = computeFinDiffGradAndJac(XOUT,funfcn,confcn,costFun, ...

In lsqncommon (line 174)
        levenbergMarquardt(funfcn,xC,flags.verbosity,options,defaultopt,initVals.F,initVals.J, ...

In lsqnonlin (line 240)
   lsqncommon(funfcn,xCurrent,lb,ub,options,defaultopt,caller,...

In qst_maximumlikelihood (line 141)
    x = lsqnonlin(L,start,[],[],opt);

In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));


#### 	 Sim.	 4 von	 10 	 #### 
	 Apply Noise to Ideal State
	 Project Behaviour to Local Polytope
	 Start QST Linear Inversion for Noisy Behaviour
	 Elapsed time: 0.246409 
	 Start QST Linear Inversion for Projected Behaviour
	 Elapsed time: 0.019049 
	 Start QST Maximum Likelihood for Noisy Behaviour
Operation terminated by user during qst_maximumlikelihood>@(t)[t(1),0,0,0;t(5)+1i*t(6),t(2),0,0;t(11)+1i*t(12),t(7)+1i*t(8),t(3),0;t(15)+1i*t(16),t(13)+1i*t(14),t(9)+1i*t(10),t(4)] (line 52)


In qst_maximumlikelihood>@(t)TT(t)'*TT(t)/trace(TT(t)'*TT(t)) (line 53)
    rho = @(t) TT(t)'*TT(t) / trace(TT(t)'*TT(t));

In qst_maximumlikelihood>@(t)(measurementBasis{1}'*rho(t)*measurementBasis{1}-countSignal(1))^2/2*(measurementBasis{1}'*rho(t)*measurementBasis{1})+(measurementBasis{2}'*rho(t)*measurementBasis{2}-countSignal(2))^2/2*(measurementBasis{2}'*rho(t)*measurementBasis{2})+(measurementBasis{3}'*rho(t)*measurementBasis{3}-countSignal(3))^2/2*(measurementBasis{3}'*rho(t)*measurementBasis{3})+(measurementBasis{4}'*rho(t)*measurementBasis{4}-countSignal(4))^2/2*(measurementBasis{4}'*rho(t)*measurementBasis{4})+(measurementBasis{5}'*rho(t)*measurementBasis{5}-countSignal(5))^2/2*(measurementBasis{5}'*rho(t)*measurementBasis{5})+(measurementBasis{6}'*rho(t)*measurementBasis{6}-countSignal(6))^2/2*(measurementBasis{6}'*rho(t)*measurementBasis{6})+(measurementBasis{7}'*rho(t)*measurementBasis{7}-countSignal(7))^2/2*(measurementBasis{7}'*rho(t)*measurementBasis{7})+(measurementBasis{8}'*rho(t)*measurementBasis{8}-countSignal(8))^2/2*(measurementBasis{8}'*rho(t)*measurementBasis{8})+(measurementBasis{9}'*rho(t)*measurementBasis{9}-countSignal(9))^2/2*(measurementBasis{9}'*rho(t)*measurementBasis{9})+(measurementBasis{10}'*rho(t)*measurementBasis{10}-countSignal(10))^2/2*(measurementBasis{10}'*rho(t)*measurementBasis{10})+(measurementBasis{11}'*rho(t)*measurementBasis{11}-countSignal(11))^2/2*(measurementBasis{11}'*rho(t)*measurementBasis{11})+(measurementBasis{12}'*rho(t)*measurementBasis{12}-countSignal(12))^2/2*(measurementBasis{12}'*rho(t)*measurementBasis{12})+(measurementBasis{13}'*rho(t)*measurementBasis{13}-countSignal(13))^2/2*(measurementBasis{13}'*rho(t)*measurementBasis{13})+(measurementBasis{14}'*rho(t)*measurementBasis{14}-countSignal(14))^2/2*(measurementBasis{14}'*rho(t)*measurementBasis{14})+(measurementBasis{15}'*rho(t)*measurementBasis{15}-countSignal(15))^2/2*(measurementBasis{15}'*rho(t)*measurementBasis{15})+(measurementBasis{16}'*rho(t)*measurementBasis{16}-countSignal(16))^2/2*(measurementBasis{16}'*rho(t)*measurementBasis{16}) (line 99)
         + (measurementBasis{11}'*rho(t)*measurementBasis{11}-countSignal(11))^2 / 2*(measurementBasis{11}'*rho(t)*measurementBasis{11})...

In finDiffEvalAndChkErr

In parfinitedifferences

In parallel_function (line 478)
            consume(base, limit, F(base, limit, supply(base, limit)));

In parfinitedifferences

In computeFinDiffGradAndJac

In levenbergMarquardt (line 252)
            [JAC,~,~,numEvals,evalOK] = computeFinDiffGradAndJac(XOUT,funfcn,confcn,costFun, ...

In lsqncommon (line 174)
        levenbergMarquardt(funfcn,xC,flags.verbosity,options,defaultopt,initVals.F,initVals.J, ...

In lsqnonlin (line 240)
   lsqncommon(funfcn,xCurrent,lb,ub,options,defaultopt,caller,...

In qst_maximumlikelihood (line 141)
    x = lsqnonlin(L,start,[],[],opt);

In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));

{Operation terminated by user during <a href="matlab:matlab.internal.language.introspective.errorDocCallback('distcomp.remoteparfor/getCompleteIntervals', 'C:\Program Files\MATLAB\R2016b\toolbox\distcomp\distcomp\+distcomp\remoteparfor.m', 127)" style="font-weight:bold">distcomp.remoteparfor/getCompleteIntervals</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2016b\toolbox\distcomp\distcomp\+distcomp\remoteparfor.m',127,0)">line 127</a>)


In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('parallel_function>distributed_execution', 'C:\Program Files\MATLAB\R2016b\toolbox\matlab\lang\parallel_function.p', 820)" style="font-weight:bold">parallel_function>distributed_execution</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2016b\toolbox\matlab\lang\parallel_function.p',820,0)">line 820</a>)
        [tags, out] = P.getCompleteIntervals(chunkSize);

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('parallel_function', 'C:\Program Files\MATLAB\R2016b\toolbox\matlab\lang\parallel_function.p', 587)" style="font-weight:bold">parallel_function</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2016b\toolbox\matlab\lang\parallel_function.p',587,0)">line 587</a>)
        R = distributed_execution(...

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('simulation10', 'C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\simulation10.m', 88)" style="font-weight:bold">simulation10</a> (<a href="matlab: opentoline('C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\simulation10.m',88,0)">line 88</a>)
parfor ii=1:nMeasurement
} 
clear
simulation10

<a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'lsq_init_pt_min','CSHelpWindow');">Initial point is a local minimum</a>.

Optimization completed because the <a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'lsq_grad_size','CSHelpWindow');">size of the gradient</a> at the initial point
is less than 1e-4 times the default value of the <a href = "matlab: helpview([docroot '/toolbox/optim/msg_csh/optim_msg_csh.map'],'function_tolerance_lsq','CSHelpWindow');">function tolerance</a>.

<<a href = "matlab: createExitMsg('levenbergMarquardt',1.000000e+02,true,true,'lsqnonlin',4.044453e-33,'default',1.000000e-10,0.000000e+00,'',0.000000e+00,0.000000e+00,'',0.000000e+00);">stopping criteria details</a>>


#### 	 Sim.	 4 von	 10 	 #### 
	 Apply Noise to Ideal State
	 Project Behaviour to Local Polytope
	 Start QST Linear Inversion for Noisy Behaviour
	 Elapsed time: 0.022553 
	 Start QST Linear Inversion for Projected Behaviour
	 Elapsed time: 0.028109 
	 Start QST Maximum Likelihood for Noisy Behaviour

Local minimum possible.

lsqnonlin stopped because the final change in the sum of squares relative to 
its initial value is less than the default value of the function tolerance.




#### 	 Sim.	 7 von	 10 	 #### 
	 Apply Noise to Ideal State
	 Project Behaviour to Local Polytope
	 Start QST Linear Inversion for Noisy Behaviour
	 Elapsed time: 0.025801 
	 Start QST Linear Inversion for Projected Behaviour
	 Elapsed time: 0.028959 
	 Start QST Maximum Likelihood for Noisy Behaviour
Operation terminated by user during qst_maximumlikelihood>@(t)[t(1),0,0,0;t(5)+1i*t(6),t(2),0,0;t(11)+1i*t(12),t(7)+1i*t(8),t(3),0;t(15)+1i*t(16),t(13)+1i*t(14),t(9)+1i*t(10),t(4)] (line 52)


In qst_maximumlikelihood>@(t)TT(t)'*TT(t)/trace(TT(t)'*TT(t)) (line 53)
    rho = @(t) TT(t)'*TT(t) / trace(TT(t)'*TT(t));

In qst_maximumlikelihood>@(t)(measurementBasis{1}'*rho(t)*measurementBasis{1}-countSignal(1))^2/2*(measurementBasis{1}'*rho(t)*measurementBasis{1})+(measurementBasis{2}'*rho(t)*measurementBasis{2}-countSignal(2))^2/2*(measurementBasis{2}'*rho(t)*measurementBasis{2})+(measurementBasis{3}'*rho(t)*measurementBasis{3}-countSignal(3))^2/2*(measurementBasis{3}'*rho(t)*measurementBasis{3})+(measurementBasis{4}'*rho(t)*measurementBasis{4}-countSignal(4))^2/2*(measurementBasis{4}'*rho(t)*measurementBasis{4})+(measurementBasis{5}'*rho(t)*measurementBasis{5}-countSignal(5))^2/2*(measurementBasis{5}'*rho(t)*measurementBasis{5})+(measurementBasis{6}'*rho(t)*measurementBasis{6}-countSignal(6))^2/2*(measurementBasis{6}'*rho(t)*measurementBasis{6})+(measurementBasis{7}'*rho(t)*measurementBasis{7}-countSignal(7))^2/2*(measurementBasis{7}'*rho(t)*measurementBasis{7})+(measurementBasis{8}'*rho(t)*measurementBasis{8}-countSignal(8))^2/2*(measurementBasis{8}'*rho(t)*measurementBasis{8})+(measurementBasis{9}'*rho(t)*measurementBasis{9}-countSignal(9))^2/2*(measurementBasis{9}'*rho(t)*measurementBasis{9})+(measurementBasis{10}'*rho(t)*measurementBasis{10}-countSignal(10))^2/2*(measurementBasis{10}'*rho(t)*measurementBasis{10})+(measurementBasis{11}'*rho(t)*measurementBasis{11}-countSignal(11))^2/2*(measurementBasis{11}'*rho(t)*measurementBasis{11})+(measurementBasis{12}'*rho(t)*measurementBasis{12}-countSignal(12))^2/2*(measurementBasis{12}'*rho(t)*measurementBasis{12})+(measurementBasis{13}'*rho(t)*measurementBasis{13}-countSignal(13))^2/2*(measurementBasis{13}'*rho(t)*measurementBasis{13})+(measurementBasis{14}'*rho(t)*measurementBasis{14}-countSignal(14))^2/2*(measurementBasis{14}'*rho(t)*measurementBasis{14})+(measurementBasis{15}'*rho(t)*measurementBasis{15}-countSignal(15))^2/2*(measurementBasis{15}'*rho(t)*measurementBasis{15})+(measurementBasis{16}'*rho(t)*measurementBasis{16}-countSignal(16))^2/2*(measurementBasis{16}'*rho(t)*measurementBasis{16}) (line 98)
         + (measurementBasis{10}'*rho(t)*measurementBasis{10}-countSignal(10))^2 / 2*(measurementBasis{10}'*rho(t)*measurementBasis{10})...

In finDiffEvalAndChkErr

In parfinitedifferences

In parallel_function (line 478)
            consume(base, limit, F(base, limit, supply(base, limit)));

In parfinitedifferences

In computeFinDiffGradAndJac

In levenbergMarquardt (line 252)
            [JAC,~,~,numEvals,evalOK] = computeFinDiffGradAndJac(XOUT,funfcn,confcn,costFun, ...

In lsqncommon (line 174)
        levenbergMarquardt(funfcn,xC,flags.verbosity,options,defaultopt,initVals.F,initVals.J, ...

In lsqnonlin (line 240)
   lsqncommon(funfcn,xCurrent,lb,ub,options,defaultopt,caller,...

In qst_maximumlikelihood (line 141)
    x = lsqnonlin(L,start,[],[],opt);

In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));

	 Elapsed time: 77.496402 
	 Start QST Maximum Likelihood for Projected Behaviour
Operation terminated by user during trace (line 14)


In qst_maximumlikelihood>@(t)TT(t)'*TT(t)/trace(TT(t)'*TT(t)) (line 53)
    rho = @(t) TT(t)'*TT(t) / trace(TT(t)'*TT(t));

In qst_maximumlikelihood>@(t)(measurementBasis{1}'*rho(t)*measurementBasis{1}-countSignal(1))^2/2*(measurementBasis{1}'*rho(t)*measurementBasis{1})+(measurementBasis{2}'*rho(t)*measurementBasis{2}-countSignal(2))^2/2*(measurementBasis{2}'*rho(t)*measurementBasis{2})+(measurementBasis{3}'*rho(t)*measurementBasis{3}-countSignal(3))^2/2*(measurementBasis{3}'*rho(t)*measurementBasis{3})+(measurementBasis{4}'*rho(t)*measurementBasis{4}-countSignal(4))^2/2*(measurementBasis{4}'*rho(t)*measurementBasis{4})+(measurementBasis{5}'*rho(t)*measurementBasis{5}-countSignal(5))^2/2*(measurementBasis{5}'*rho(t)*measurementBasis{5})+(measurementBasis{6}'*rho(t)*measurementBasis{6}-countSignal(6))^2/2*(measurementBasis{6}'*rho(t)*measurementBasis{6})+(measurementBasis{7}'*rho(t)*measurementBasis{7}-countSignal(7))^2/2*(measurementBasis{7}'*rho(t)*measurementBasis{7})+(measurementBasis{8}'*rho(t)*measurementBasis{8}-countSignal(8))^2/2*(measurementBasis{8}'*rho(t)*measurementBasis{8})+(measurementBasis{9}'*rho(t)*measurementBasis{9}-countSignal(9))^2/2*(measurementBasis{9}'*rho(t)*measurementBasis{9})+(measurementBasis{10}'*rho(t)*measurementBasis{10}-countSignal(10))^2/2*(measurementBasis{10}'*rho(t)*measurementBasis{10})+(measurementBasis{11}'*rho(t)*measurementBasis{11}-countSignal(11))^2/2*(measurementBasis{11}'*rho(t)*measurementBasis{11})+(measurementBasis{12}'*rho(t)*measurementBasis{12}-countSignal(12))^2/2*(measurementBasis{12}'*rho(t)*measurementBasis{12})+(measurementBasis{13}'*rho(t)*measurementBasis{13}-countSignal(13))^2/2*(measurementBasis{13}'*rho(t)*measurementBasis{13})+(measurementBasis{14}'*rho(t)*measurementBasis{14}-countSignal(14))^2/2*(measurementBasis{14}'*rho(t)*measurementBasis{14})+(measurementBasis{15}'*rho(t)*measurementBasis{15}-countSignal(15))^2/2*(measurementBasis{15}'*rho(t)*measurementBasis{15})+(measurementBasis{16}'*rho(t)*measurementBasis{16}-countSignal(16))^2/2*(measurementBasis{16}'*rho(t)*measurementBasis{16}) (line 96)
         + (measurementBasis{8}'*rho(t)*measurementBasis{8}-countSignal(8))^2 / 2*(measurementBasis{8}'*rho(t)*measurementBasis{8})...

In finDiffEvalAndChkErr

In parfinitedifferences

In parallel_function (line 478)
            consume(base, limit, F(base, limit, supply(base, limit)));

In parfinitedifferences

In computeFinDiffGradAndJac

In levenbergMarquardt (line 252)
            [JAC,~,~,numEvals,evalOK] = computeFinDiffGradAndJac(XOUT,funfcn,confcn,costFun, ...

In lsqncommon (line 174)
        levenbergMarquardt(funfcn,xC,flags.verbosity,options,defaultopt,initVals.F,initVals.J, ...

In lsqnonlin (line 240)
   lsqncommon(funfcn,xCurrent,lb,ub,options,defaultopt,caller,...

In qst_maximumlikelihood (line 141)
    x = lsqnonlin(L,start,[],[],opt);

In parallel_function>make_general_channel/channel_general (line 914)
                    O = F(C{:});

In remoteParallelFunction (line 38)
        out = parallel.internal.pool.serialize(feval(channel, channelArgs{:}));

{Operation terminated by user during <a href="matlab:matlab.internal.language.introspective.errorDocCallback('distcomp.remoteparfor/getCompleteIntervals', 'C:\Program Files\MATLAB\R2016b\toolbox\distcomp\distcomp\+distcomp\remoteparfor.m', 127)" style="font-weight:bold">distcomp.remoteparfor/getCompleteIntervals</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2016b\toolbox\distcomp\distcomp\+distcomp\remoteparfor.m',127,0)">line 127</a>)


In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('parallel_function>distributed_execution', 'C:\Program Files\MATLAB\R2016b\toolbox\matlab\lang\parallel_function.p', 820)" style="font-weight:bold">parallel_function>distributed_execution</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2016b\toolbox\matlab\lang\parallel_function.p',820,0)">line 820</a>)
        [tags, out] = P.getCompleteIntervals(chunkSize);

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('parallel_function', 'C:\Program Files\MATLAB\R2016b\toolbox\matlab\lang\parallel_function.p', 587)" style="font-weight:bold">parallel_function</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2016b\toolbox\matlab\lang\parallel_function.p',587,0)">line 587</a>)
        R = distributed_execution(...

In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('simulation10', 'C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\simulation10.m', 88)" style="font-weight:bold">simulation10</a> (<a href="matlab: opentoline('C:\Users\Laura\polybox\ETH\6_6.Semester\Semesterarbeit\Matlab\Simulation10_2017_09_04\simulation10.m',88,0)">line 88</a>)
parfor ii=1:nMeasurement
} 
clear
